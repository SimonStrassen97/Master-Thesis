#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Apr 27 14:42:15 2023

@author: simonst
"""

import os
import numpy as np
import matplotlib.pyplot as plt
import json
from pycolmap_utils.read_write_model import *
from scipy.spatial.transform import Rotation as Rot



def load_data(data_path):
    
    with open(data_path, "r") as f:
        data = json.load(f)
        
    return data



colmap_path = "/home/simonst/github/pycolmap_out/gui_test/"
path = "/home/simonst/github/Datasets/wt/raw/20230417_174726"
data_folder = os.path.join(path, "data")


# sensor poses
files = os.listdir(data_folder)
files.sort()

x = []
y = []
z = []
r = []
ind = []

for i, file in enumerate(files):
    data_path = os.path.join(data_folder, file)
    
    data = load_data(data_path)
    c_w = data["cam"]
    
    if i==0:
        
        R = Rot.from_euler("z", c_w[3]).as_matrix()
        t = np.expand_dims(np.array([c_w[0],c_w[1], c_w[2]]),axis=-1)
        T_p2w = np.hstack([R,t])
        T_p2w = np.vstack([T_p2w, [0,0,0,1]])

    x.append(c_w[0])
    y.append(c_w[1])
    z.append(c_w[2])
    r.append(c_w[3])
    ind.append(i)
    
   

# colmap poses
images_file = os.path.join(colmap_path, "sparse", "images.bin")
images = read_images_binary(images_file)

x2 = []
y2 = []
z2 = []
r2 = []
ind2 = []

for i, img in enumerate(images.values()): 
    qw, qx, qy, qz = img.qvec
    Q = np.array([qx, qy, qz, qw])
    t = img.tvec * 100
    
    if i==0:
        
        R = Rot.from_quat(Q).as_matrix()
        t_ = np.expand_dims(t,axis=-1)
        T_p2c = np.hstack([R,t_])
        T_p2c = np.vstack([T_p2c, [0,0,0,1]])
        
        T_c2p = np.linalg.inv(T_p2c)
        
        T_c2w = T_p2w @ T_c2p
    
    t = T_c2w @ np.append(t,1)
    a = Rot.from_matrix([T_c2w[:3,:3]]).as_euler("xyz")
    
    
    x2.append(t[0])
    y2.append(t[1])
    z2.append(t[2])
    # r.append(c_w[3])
    # ind.append(i)
    
    

fig, ax = plt.subplots(1,2)
ax[0].scatter(x,y)
ax[0].scatter(x2, y2)
ax[1].scatter(ind, r)

    
    
    
    
    
    
    
    
    
    